{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Reactprojects\\\\Food_Order_App\\\\01-starting-project\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport classes from './AvailableMeals.module.css';\nimport MealItem from './MealItem/MealItem';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-c732c-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 4\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"pzdxjHaxPcgzfsxHt2v1NZY454E=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/hp/Reactprojects/Food_Order_App/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["Card","classes","MealItem","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","error","message","MealsLoading","MealsError","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,EAAzC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACd,UAAMS,UAAU,GAAG,YAAY;AAE/B,YAAMC,QAAQ,GAAK,MAAMC,KAAK,CAAC,iEAAD,CAA9B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACf,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACF;;AACD,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA8B;AAC7BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMA;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,KAnBD;;AAoBA,QAAG;AACFG,MAAAA,UAAU;AACV,KAFD,CAGA,OAAMc,KAAN,EAAY;AACTjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACe,KAAK,CAACC,OAAP,CAAZ;AACF;AACH,GA5BQ,EA4BP,EA5BO,CAAT;;AA8BA,MAAGnB,SAAH,EAAa;AACX,wBACE;AAAS,MAAA,SAAS,EAAEP,OAAO,CAAC2B,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAGlB,SAAH,EAAa;AACX,wBACE;AAAS,MAAA,SAAS,EAAET,OAAO,CAAC4B,UAA5B;AAAA,6BACE;AAAA,kBAAInB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACF,QAAMoB,SAAS,GAAExB,KAAK,CAACyB,GAAN,CAAYC,IAAD,iBAC1B,QAAC,QAAD;AACA,IAAA,EAAE,EAAGA,IAAI,CAACV,EADV;AAGA,IAAA,IAAI,EAAGU,IAAI,CAACT,IAHZ;AAIA,IAAA,WAAW,EAAES,IAAI,CAACR,WAJlB;AAKA,IAAA,KAAK,EAAEQ,IAAI,CAACP;AALZ,KAEOO,IAAI,CAACV,EAFZ;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AASA,sBAAO;AAAS,IAAA,SAAS,EAAErB,OAAO,CAACK,KAA5B;AAAA,2BACN;AAAA,6BACI,QAAC,IAAD;AAAA,kBACDwB;AADC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,UAAP;AAOA,CAlED;;GAAMzB,c;;KAAAA,c;AAoEN,eAAeA,cAAf","sourcesContent":["import Card from '../UI/Card';\r\nimport classes from './AvailableMeals.module.css';\r\nimport MealItem from './MealItem/MealItem';\r\nimport {useEffect,useState} from 'react';\r\n\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals,setMeals] =useState([]);\r\n  const [isLoading,setIsLoading] = useState(true);\r\n  const [httpError,setHttpError] = useState();\r\n\r\n  useEffect( () => {\r\n     const fetchMeals = async () => {\r\n\r\n     const response   = await fetch('https://react-http-c732c-default-rtdb.firebaseio.com/meals.json');\r\n     \r\n     if (!response.ok) {\r\n        throw new Error('Something went wrong!');\r\n     }\r\n     const responseData = await response.json();\r\n     const loadedMeals = [];\r\n     for(const key in responseData){\r\n      loadedMeals.push({\r\n        id: key,\r\n        name: responseData[key].name,\r\n        description: responseData[key].description,\r\n        price: responseData[key].price\r\n      });\r\n     }\r\n     setMeals(loadedMeals);\r\n     setIsLoading(false);\r\n     };\r\n     try{\r\n      fetchMeals(); \r\n     }\r\n     catch(error){\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n     }\r\n  },[]);\r\n  \r\n  if(isLoading){\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n     );\r\n  }\r\n\r\n  if(httpError){\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n     );\r\n  }\r\n\tconst mealsList= meals.map( (meal) => (\r\n   <MealItem\r\n   id= {meal.id} \r\n   key = {meal.id}\r\n   name={ meal.name} \r\n   description={meal.description} \r\n   price={meal.price}\r\n   />\r\n   ));\r\n\treturn <section className={classes.meals}>\r\n\t\t<ul>\r\n      <Card>\r\n\t\t\t{ mealsList }\r\n\t\t  </Card>\r\n    </ul>\r\n\t</section>\r\n};\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}