{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Reactprojects\\\\Food_Order_App\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './cart-context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/hp/Reactprojects/Food_Order_App/01-starting-project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import CartContext from './cart-context';\r\nimport { useReducer } from 'react';\r\n\r\nconst defaultCartState= {\r\n\titems: [],\r\n\ttotalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state,action) => {\r\n\tif(action.type === 'ADD'){\r\n\t\tconst updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n\t\tconst existingCartItemIndex= state.items.findIndex(item => item.id === action.item.id);\r\n\r\n\t\tconst existingCartItem =  state.items[existingCartItemIndex];\r\n\r\n\t\t\r\n\r\n\t\tlet updatedItems;\r\n\r\n\t\tif(existingCartItem){ \r\n\t\t\tconst updatedItem={\r\n\t\t\t\t...existingCartItem,\r\n\t\t\t\tamount: existingCartItem.amount + action.item.amount\r\n\t\t\t};\r\n\t\t\tupdatedItems = [...state.items];\r\n\t\t\tupdatedItems[existingCartItemIndex]=updatedItem;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tupdatedItems = state.items.concat(action.item);\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn {\r\n\t\t\titems: updatedItems,\r\n\t\t\ttotalAmount: updatedTotalAmount\r\n\t\t};\t\r\n\t}\r\n\tif(action.type === 'REMOVE'){\r\n\t\t\tconst existingCartItemIndex= state.items.findIndex(item => item.id === action.id);\r\n\r\n\t\t\tconst existingItem = state.items[existingCartItemIndex];\r\n\t\t\tconst updatedTotalAmount = state.totalAmount - existingItem.price;\r\n\t\t\tlet updatedItems;\r\n\t\t\tif(existingItem.amount===1){\r\n\t\t\t\tupdatedItems =state.items.filter(item => item.id !== action.id);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tconst updatedItem= {...existingItem, amount: existingItem.amount-1};\r\n\t\t\t\tupdatedItems = [...state.items];\r\n\t\t\t\tupdatedItems[existingCartItemIndex]=updatedItem;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\titems: updatedItems,\r\n\t\t\t\ttotalAmount: updatedTotalAmount\r\n\t\t\t};\r\n\t\t}\r\n\treturn defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n\r\n\tconst [cartState, dispatchCartAction] = useReducer(cartReducer,defaultCartState);\r\n\tconst addItemToCartHandler = item => {\r\n\t\tdispatchCartAction({ type: 'ADD', item: item});\r\n\t};\r\n\tconst removeItemFromCartHandler = id => {\r\n\t\tdispatchCartAction({ type: 'REMOVE', id: id});\r\n\t};\r\n\r\n\tconst cartContext= {\r\n\t\titems: cartState.items,\r\n\t\ttotalAmount: cartState.totalAmount,\r\n\t\taddItem: addItemToCartHandler,\r\n\t\tremoveItem: removeItemFromCartHandler\r\n\t}\r\n\treturn <CartContext.Provider value={cartContext}>\r\n\t{props.children}\r\n\t</CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}